{
    "name": "master-css",
    "scopeName": "source.master-css",
    "injectionSelector": "L:source, L:text",
    "patterns": [
        {
            "include": "#highlight-class"
        },
        {
            "include": "#highlight-class-quoted-single"
        },
        {
            "include": "#highlight-react-class"
        },
        {
            "include": "#highlight-style-extend-classes"
        }
    ],
    "repository": {
        "highlight-class": {
            "begin": "(?:\\s*)?(className|class)(\\=)(\")",
            "end": "(\")",
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name"
                },
                "2": {
                    "name": "punctuation.separator.key-value"
                },
                "3": {
                    "name": "string.quoted.double.html"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.quoted.double.html"
                }
            },
            "contentName": "meta.embedded.block.master-css.class",
            "patterns": [
                {
                    "include": "#master-css-group"
                },
                {
                    "include": "#master-css-key"
                },
                {
                    "include": "#master-css-selector"
                },
                {
                    "include": "#master-css-value"
                },
                {
                    "include": "#master-css-media"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "highlight-class-quoted-single": {
            "begin": "(?:\\s*)?(className|class)(\\=)(')",
            "end": "(')",
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name"
                },
                "2": {
                    "name": "punctuation.separator.key-value"
                },
                "3": {
                    "name": "string.quoted.double.html"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.quoted.double.html"
                }
            },
            "contentName": "meta.embedded.block.master-css.class",
            "patterns": [
                {
                    "include": "#master-css-group-quoted-single"
                },
                {
                    "include": "#master-css-key-quoted-single"
                },
                {
                    "include": "#master-css-selector-quoted-single"
                },
                {
                    "include": "#master-css-value-quoted-single"
                },
                {
                    "include": "#master-css-media-quoted-single"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "highlight-react-class": {
            "begin": "(?:\\s*)?(className|class)(\\=)(\\s?\\{)",
            "end": "(\\})",
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name"
                },
                "2": {
                    "name": "keyword.operator.assignment"
                },
                "3": {
                    "name": "punctuation.section.embedded.begin"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.embedded.end"
                }
            },
            "contentName": "meta.embedded.block.master-css.class",
            "patterns": [
                {
                    "include": "#react-class-function"
                },
                {
                    "include": "#react-class-template-string"
                },
                {
                    "include": "#react-class-quoted-double-string"
                },
                {
                    "include": "#react-class-quoted-single-string"
                },
                {
                    "include": "source.ts"
                }
            ]
        },
        "react-class-function": {
            "begin": "\\s?(\\w*)(\\()",
            "end": "(\\))",
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name"
                }
            },
            "endCaptures": {},
            "patterns": [
                {
                    "include": "#react-class-function-quoted"
                },
                {
                    "include": "#react-class-template-string"
                },
                {
                    "include": "#react-class-quoted-double-string"
                },
                {
                    "include": "#react-class-quoted-single-string"
                }
            ]
        },
        "react-class-function-quoted": {
            "begin": "({)",
            "end": "(})",
            "patterns": [
                {
                    "include": "#react-class-template-string"
                },
                {
                    "include": "#react-class-quoted-double-string"
                },
                {
                    "include": "#react-class-quoted-single-string"
                },
                {
                    "include": "source.ts"
                }
            ]
        },
        "react-class-template-string": {
            "begin": "\\s?(\\w*)(`)",
            "end": "`",
            "captures": {
                "1": {
                    "name": "punctuation.definition.string.template.begin"
                },
                "2": {
                    "name": "string.quoted.double"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.quoted.double"
                }
            },
            "patterns": [
                {
                    "include": "#master-css-group"
                },
                {
                    "include": "#master-css-key"
                },
                {
                    "include": "#master-css-selector"
                },
                {
                    "include": "#master-css-value"
                },
                {
                    "include": "#master-css-media"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "react-class-quoted-double-string": {
            "begin": "(\")",
            "end": "(\")",
            "captures": {
                "1": {
                    "name": "string.quoted.double"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.quoted.double"
                }
            },
            "patterns": [
                {
                    "include": "#master-css-group"
                },
                {
                    "include": "#master-css-key"
                },
                {
                    "include": "#master-css-selector"
                },
                {
                    "include": "#master-css-value"
                },
                {
                    "include": "#master-css-media"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "react-class-quoted-single-string": {
            "begin": "(')",
            "end": "(')",
            "captures": {
                "1": {
                    "name": "string.quoted.single"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.quoted.single"
                }
            },
            "patterns": [
                {
                    "include": "#master-css-group-quoted-single"
                },
                {
                    "include": "#master-css-key-quoted-single"
                },
                {
                    "include": "#master-css-selector-quoted-single"
                },
                {
                    "include": "#master-css-value-quoted-single"
                },
                {
                    "include": "#master-css-media-quoted-single"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "highlight-style-extend-classes": {
            "begin": "\\s*((?:'|\"|`)classes(?:'|\"|`))\\s*(\\,)\\s*(\\{)",
            "end": "(\\})",
            "captures": {
                "1": {
                    "name": "string.quoted"
                },
                "2": {
                    "name": "punctuation.separator.comma"
                },
                "3": {
                    "name": "punctuation.definition.block"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.block"
                }
            },
            "patterns": [
                {
                    "include": "#style-extend-classes-template-string"
                },
                {
                    "include": "#style-extend-classes-quoted-double-string"
                },
                {
                    "include": "#style-extend-classes-quoted-single-string"
                },
                {
                    "include": "source.ts"
                }
            ]
        },
        "style-extend-classes-template-string": {
            "begin": "((?!'|\"|`)\\S*(?!'|\"|`)\\s*)?(:)\\s*(`)",
            "end": "(`)",
            "captures": {
                "1": {
                    "name": "meta.object-literal.key"
                },
                "2": {
                    "name": "punctuation.separator.key-value"
                },
                "3": {
                    "name": "string.template punctuation.definition.string.template.begin"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.template punctuation.definition.string.template.end"
                }
            },
            "patterns": [
                {
                    "include": "#master-css-group"
                },
                {
                    "include": "#master-css-key"
                },
                {
                    "include": "#master-css-selector"
                },
                {
                    "include": "#master-css-value"
                },
                {
                    "include": "#master-css-media"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "style-extend-classes-quoted-double-string": {
            "begin": "((?!'|\"|`)\\S*(?!'|\"|`)\\s*)?(:)\\s*(\")",
            "end": "(\")",
            "captures": {
                "1": {
                    "name": "meta.object-literal.key"
                },
                "2": {
                    "name": "punctuation.separator.key-value"
                },
                "3": {
                    "name": "string.quoted.double punctuation.definition.string.begin"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.quoted.double punctuation.definition.string.begin.end"
                }
            },
            "patterns": [
                {
                    "include": "#master-css-group"
                },
                {
                    "include": "#master-css-key"
                },
                {
                    "include": "#master-css-selector"
                },
                {
                    "include": "#master-css-value"
                },
                {
                    "include": "#master-css-media"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "style-extend-classes-quoted-single-string": {
            "begin": "((?!'|\"|`)\\S*(?!'|\"|`)\\s*)?(:)\\s*(')",
            "end": "(')",
            "captures": {
                "1": {
                    "name": "meta.object-literal.key"
                },
                "2": {
                    "name": "punctuation.separator.key-value"
                },
                "3": {
                    "name": "string.quoted.single punctuation.definition.string.begin"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "string.quoted.single punctuation.definition.string.begin.end"
                }
            },
            "patterns": [
                {
                    "include": "#master-css-group-quoted-single"
                },
                {
                    "include": "#master-css-key-quoted-single"
                },
                {
                    "include": "#master-css-selector-quoted-single"
                },
                {
                    "include": "#master-css-value-quoted-single"
                },
                {
                    "include": "#master-css-media-quoted-single"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "master-css-group": {
            "begin": "(\\{)",
            "end": "(\\}|\")",
            "captures": {
                "1": {
                    "name": "punctuation.section.property-list.begin"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.property-list.end"
                }
            },
            "contentName": "master-css.class.group",
            "patterns": [
                {
                    "include": "#master-css-key"
                },
                {
                    "include": "#master-css-value"
                },
                {
                    "include": "#master-css-group-split-sign"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "master-css-group-quoted-single": {
            "begin": "(\\{)",
            "end": "(\\}|')",
            "captures": {
                "1": {
                    "name": "punctuation.section.property-list.begin"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.property-list.end"
                }
            },
            "contentName": "master-css.class.group",
            "patterns": [
                {
                    "include": "#master-css-key-quoted-single"
                },
                {
                    "include": "#master-css-value-quoted-single"
                },
                {
                    "include": "#master-css-group-split-sign"
                },
                {
                    "include": "#class-string"
                }
            ]
        },
        "master-css-group-split-sign": {
            "patterns": [
                {
                    "begin": "(;)",
                    "end": "\\b",
                    "captures": {
                        "1": {
                            "name": "master-css.class.split"
                        }
                    }
                }
            ]
        },
        "master-css-key": {
            "patterns": [
                {
                    "match": "(?<![^\\s;\"`<_\\@\\+>~\\[]+)(@|~)",
                    "captures": {
                        "1": {
                            "name": "support.type.property-name.css"
                        }
                    }
                },
                {
                    "match": "(?!break\\-word|static|fixed|sticky|rel|abs|hidden|hide|invisible|visible|block|table|contents|inline\\-block|inline\\-flex|inline\\-grid|inline\\-table|inline|rounded|round|(?:flex(?!\\:(?:row|col|column|wrap|nowrap|\\d)(?:\\-reverse)?))|square)(?<![^\\s;:]+:[^\\s;]*)([^\\s;:\"]+)(?<!\\([^\\)]*\\))(:)(?!any\\-link|visited|target|scope|hover|before|after|active|focus\\-visible|focus\\-within|focus|autofill|enabled|disabled|read\\-only|read\\-write|placeholder\\-showen|default|checked|indeterminate|valid|invalid|in\\-range|out\\-of\\-range|required|optional|root|empty|first\\-letter|first\\-child|first\\-of\\-type|last\\-child|last\\-of\\-type|only\\-child|only\\-of\\-type|defined|first|fullscreen|left)",
                    "captures": {
                        "1": {
                            "name": "support.type.property-name.css"
                        },
                        "2": {
                            "name": "punctuation.separator.key-value.css"
                        }
                    }
                }
            ]
        },
        "master-css-value": {
            "patterns": [
                {
                    "match": "(?<=[^\\s;:]+:)(var)(\\()(\\-\\-[^\\s;\"]*)(\\))",
                    "captures": {
                        "1": {
                            "name": "support.function.misc.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        },
                        "3": {
                            "name": "variable.argument.css"
                        },
                        "4": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=[^\\s;:]+:)(\\$)(\\()([^\\s;\"]*)(\\))",
                    "captures": {
                        "1": {
                            "name": "support.function.misc.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        },
                        "3": {
                            "name": "variable.argument.css"
                        },
                        "4": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "([^\\s;\\:\\|,@\"]+)(\\()",
                    "captures": {
                        "1": {
                            "name": "support.function.misc.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "\\b(break\\-word|static|fixed|sticky|rel|abs|hidden|hide|invisible|visible|block|table|contents|inline\\-block|inline\\-flex|inline\\-grid|inline\\-table|inline|rounded|round|(?:flex(?!\\:(?:row|col|column|wrap|nowrap|\\d)(?:\\-reverse)?))|square)",
                    "captures": {
                        "1": {
                            "name": "support.constant.property-value.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;\"\\/]*)(\\+|\\-|\\*|\\/)?(\\d+\\.\\d+|\\.\\d+|\\d+)(\\%|ch|cm|em|ex|in|mm|pc|pt|px|rem|vh|vmax|vmin|vw|deg|grad|rad|turn|s)?",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.css"
                        },
                        "2": {
                            "name": "constant.numeric.css"
                        },
                        "3": {
                            "name": "keyword.other.unit"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;\"\\:]*)([^\\s;\"`:@'_!\\[\\|,\\(\\)\\.\\}\\+>~<]+(?:\\.\\d+)?)",
                    "captures": {
                        "1": {
                            "name": "support.constant.property-value.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;\"\\:]+)(\\|)",
                    "captures": {
                        "1": {
                            "name": "comment.block"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;\"\\:]+)(,)",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.list.comma.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;\"\\:]+)(!)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.important.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;\"\\:]+)(\\()",
                    "captures": {
                        "1": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;\"\\:]+)(\\))",
                    "captures": {
                        "1": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=[^\\s;:]+:)(?:('[^\\s']*')|([^\\s;\"`:@'_!\\[\\.\\+]+))(?:\\.\\d)?(!)?",
                    "captures": {
                        "1": {
                            "name": "string.quoted.double.html"
                        },
                        "2": {
                            "name": "support.constant.property-value.css"
                        },
                        "3": {
                            "name": "keyword.other.important.css"
                        }
                    }
                }
            ]
        },
        "master-css-selector": {
            "patterns": [
                {
                    "match": "(?<![\\|/\\,])(\\.)(?!\\d)([^\\s;\"`@:><.\\[\\]_\\+\\(\\)]*)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.class.css"
                        },
                        "2": {
                            "name": "entity.other.attribute-name.class.css"
                        }
                    }
                },
                {
                    "match": "(\\:{1,2}(?:lang|nth\\-child|nth\\-last\\-child|nth\\-of\\-type|nth\\-last\\-of\\-type|host\\-context|host|is|not|where))(\\()",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.pseudo-class.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=\\:{1,2}(?:lang|nth\\-child|nth\\-last\\-child|nth\\-of\\-type|nth\\-last\\-of\\-type|host\\-context|host|is|not|where)\\([^\\s;\\(]*)(\\))",
                    "captures": {
                        "1": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(\\:{1,2}(?:any\\-link|visited|target|scope|hover|before|after|active|focus\\-visible|focus\\-within|focus|autofill|enabled|disabled|read\\-only|read\\-write|placeholder\\-showen|default|checked|indeterminate|valid|invalid|in\\-range|out\\-of\\-range|required|optional|root|empty|first\\-letter|first\\-child|first\\-of\\-type|last\\-child|last\\-of\\-type|only\\-child|only\\-of\\-type|defined|first|fullscreen|left))",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.pseudo-class.css"
                        }
                    }
                },
                {
                    "match": "(?:(<|_|\\@)|(\\+(?!\\d)|>|~)|(\\[)|(\\]))([^\\s;\"`@:><.\\[\\]_\\+\\(\\)]*)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.combinator.css"
                        },
                        "2": {
                            "name": ""
                        },
                        "3": {
                            "name": "punctuation.definition.entity.begin.bracket.square.css"
                        },
                        "4": {
                            "name": "punctuation.definition.entity.end.bracket.square.css"
                        },
                        "5": {
                            "name": "entity.name.tag.css"
                        }
                    }
                }
            ]
        },
        "master-css-media": {
            "patterns": [
                {
                    "match": "(?<=[^\\s;:]+:(?:(?:[^\\s;@]*)|(?:'[^\\s;]*'[^\\s;@]*)))(@[^\\s;\"`']+)",
                    "captures": {
                        "1": {
                            "name": "constant.character.escape"
                        }
                    }
                }
            ]
        },
        "master-css-key-quoted-single": {
            "patterns": [
                {
                    "match": "(?<![^\\s;'`<_\\@\\+>~\\[]+)(@|~)",
                    "captures": {
                        "1": {
                            "name": "support.type.property-name.css"
                        }
                    }
                },
                {
                    "match": "(?!break\\-word|static|fixed|sticky|rel|abs|hidden|hide|invisible|visible|block|table|contents|inline\\-block|inline\\-flex|inline\\-grid|inline\\-table|inline|rounded|round|(?:flex(?!\\:(?:row|col|column|wrap|nowrap|\\d)(?:\\-reverse)?))|square)(?<![^\\s;:]+:[^\\s;]*)([^\\s;:']+)(?<!\\([^\\)]*\\))(:)(?!any\\-link|visited|target|scope|hover|before|after|active|focus\\-visible|focus\\-within|focus|autofill|enabled|disabled|read\\-only|read\\-write|placeholder\\-showen|default|checked|indeterminate|valid|invalid|in\\-range|out\\-of\\-range|required|optional|root|empty|first\\-letter|first\\-child|first\\-of\\-type|last\\-child|last\\-of\\-type|only\\-child|only\\-of\\-type|defined|first|fullscreen|left)",
                    "captures": {
                        "1": {
                            "name": "support.type.property-name.css"
                        },
                        "2": {
                            "name": "punctuation.separator.key-value.css"
                        }
                    }
                }
            ]
        },
        "master-css-value-quoted-single": {
            "patterns": [
                {
                    "match": "(?<=[^\\s;:]+:)(var)(\\()(\\-\\-[^\\s;']*)(\\))",
                    "captures": {
                        "1": {
                            "name": "support.function.misc.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        },
                        "3": {
                            "name": "variable.argument.css"
                        },
                        "4": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=[^\\s;:]+:)(\\$)(\\()([^\\s;']*)(\\))",
                    "captures": {
                        "1": {
                            "name": "support.function.misc.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        },
                        "3": {
                            "name": "variable.argument.css"
                        },
                        "4": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "([^\\s;\\:\\|,@']+)(\\()",
                    "captures": {
                        "1": {
                            "name": "support.function.misc.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "\\b(break\\-word|static|fixed|sticky|rel|abs|hidden|hide|invisible|visible|block|table|contents|inline\\-block|inline\\-flex|inline\\-grid|inline\\-table|inline|rounded|round|(?:flex(?!\\:(?:row|col|column|wrap|nowrap|\\d)(?:\\-reverse)?))|square)",
                    "captures": {
                        "1": {
                            "name": "support.constant.property-value.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;'\\/]*)(\\+|\\-|\\*|\\/)?(\\d+\\.\\d+|\\.\\d+|\\d+)(\\%|ch|cm|em|ex|in|mm|pc|pt|px|rem|vh|vmax|vmin|vw|deg|grad|rad|turn|s)?",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.css"
                        },
                        "2": {
                            "name": "constant.numeric.css"
                        },
                        "3": {
                            "name": "keyword.other.unit"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;'\\:]*)([^\\s;'`:@\"_!\\[\\|,\\(\\)\\.\\}\\+>~<]+(?:\\.\\d+)?)",
                    "captures": {
                        "1": {
                            "name": "support.constant.property-value.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;'\\:]+)(\\|)",
                    "captures": {
                        "1": {
                            "name": "comment.block"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;'\\:]+)(,)",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.list.comma.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;'\\:]+)(!)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.important.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;'\\:]+)(\\()",
                    "captures": {
                        "1": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=(?:(?:[^\\s;:]+:)|@|~|(?:[^\\s;\\:\\|,]+\\())[^\\s;'\\:]+)(\\))",
                    "captures": {
                        "1": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=[^\\s;:]+:)(?:(\"[^\\s;\"]*\")|([^\\s;\"`:@'_!\\[\\.\\+]+))(?:\\.\\d)?(!)?",
                    "captures": {
                        "1": {
                            "name": "string.quoted.double.html"
                        },
                        "2": {
                            "name": "support.constant.property-value.css"
                        },
                        "3": {
                            "name": "keyword.other.important.css"
                        }
                    }
                }
            ]
        },
        "master-css-selector-quoted-single": {
            "patterns": [
                {
                    "match": "(?<![\\|/\\,])(\\.)(?!\\d)([^\\s;'`@:><.\\[\\]_\\+\\(\\)]*)",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.class.css"
                        },
                        "2": {
                            "name": "entity.other.attribute-name.class.css"
                        }
                    }
                },
                {
                    "match": "(\\:{1,2}(?:lang|nth\\-child|nth\\-last\\-child|nth\\-of\\-type|nth\\-last\\-of\\-type|host\\-context|host|is|not|where))(\\()",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.pseudo-class.css"
                        },
                        "2": {
                            "name": "punctuation.section.function.begin.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(?<=\\:{1,2}(?:lang|nth\\-child|nth\\-last\\-child|nth\\-of\\-type|nth\\-last\\-of\\-type|host\\-context|host|is|not|where)\\([^\\s;\\(]*)(\\))",
                    "captures": {
                        "1": {
                            "name": "punctuation.section.function.end.bracket.round.css"
                        }
                    }
                },
                {
                    "match": "(\\:{1,2}(?:any\\-link|visited|target|scope|hover|before|after|active|focus\\-visible|focus\\-within|focus|autofill|enabled|disabled|read\\-only|read\\-write|placeholder\\-showen|default|checked|indeterminate|valid|invalid|in\\-range|out\\-of\\-range|required|optional|root|empty|first\\-letter|first\\-child|first\\-of\\-type|last\\-child|last\\-of\\-type|only\\-child|only\\-of\\-type|defined|first|fullscreen|left))",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.pseudo-class.css"
                        }
                    }
                },
                {
                    "match": "(?:(<|_|\\@)|(\\+(?!\\d)|>|~)|(\\[)|(\\]))([^\\s;'`@:><.\\[\\]_\\+\\(\\)]*)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.combinator.css"
                        },
                        "2": {
                            "name": ""
                        },
                        "3": {
                            "name": "punctuation.definition.entity.begin.bracket.square.css"
                        },
                        "4": {
                            "name": "punctuation.definition.entity.end.bracket.square.css"
                        },
                        "5": {
                            "name": "entity.name.tag.css"
                        }
                    }
                }
            ]
        },
        "master-css-media-quoted-single": {
            "patterns": [
                {
                    "match": "(?<=[^\\s;:]+:(?:(?:[^\\s;@]*)|(?:\"[^\\s;]*\"[^\\s;@]*)))(@[^\\s;'`\"]+)",
                    "captures": {
                        "1": {
                            "name": "constant.character.escape"
                        }
                    }
                }
            ]
        },
        "class-string": {
            "patterns": [
                {
                    "match": "(\\S)",
                    "captures": {
                        "1": {}
                    }
                }
            ]
        }
    }
}